---
const domains = [
  { title: 'Web Development' },
  { title: 'AI and ML' },
  { title: 'IOT' },
  { title: 'Data Science' },
  { title: 'Cloud Computing' },
  { title: 'Block Chain' },
  { title: 'Android Dev' }
]
---

<section id="domains" class="py-4 md:py-14 px-6 md:px-16 lg:px-36 my-6 md:my-0">
  <div class="text-2xl md:text-3xl font-main">Domains</div>
  <div class="scroller">
    <div class="flex mt-2 md:mt-6 py-4 scroller__inner">
      {
        domains.map(domain => (
          <div class="text-base md:text-lg font-main shadow-lg py-2 px-4 md:py-4 md:px-6 whitespace-nowrap border-[1px] rounded-xl border-secondary/30">
            {domain.title}
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  :root {
    --var--gap: 1rem;

    @media (min-width: 768px) {
      --var--gap: 2rem;
    }
  }

  .scroller__inner {
    gap: var(--var--gap);
  }

  .scroller[data-animated='true'] {
    overflow: hidden;
    mask: linear-gradient(
      90deg,
      transparent,
      white 15%,
      white 85%,
      transparent
    );
  }

  .scroller[data-animated='true'] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: scroll 21s linear infinite;
  }

  @keyframes scroll {
    to {
      transform: translate(calc(-50% - (var(--var--gap) / 2)));
    }
  }
</style>

<script>
  const scrollers = document.querySelectorAll('.scroller')
  if (!window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
    addAnimation()
  }

  function addAnimation() {
    if (scrollers) {
      scrollers.forEach(scroller => {
        scroller.setAttribute('data-animated', 'true')

        const scrollerInner = scroller.querySelector('.scroller__inner')
        const scrollerInnerContent = scrollerInner
          ? Array.from(scrollerInner.children)
          : []

        scrollerInnerContent.forEach(content => {
          const clone = content.cloneNode(true) as HTMLElement
          clone.setAttribute('aria-hidden', 'true')
          if (scrollerInner) {
            scrollerInner.appendChild(clone)
          }
        })
      })
    }
  }
</script>
